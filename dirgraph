#!/bin/sh

# [IOS] Project 1 - Directory graph
# Author: Jiri Furda (xfurda00)


# --- Shell settings ---
LC_ALL=en_US.UTF-8
POSIXLY_CORRECT=yes


# --- Variables ---
HELP=0
N=0


# --- Processing flags ---
while getopts :i:n o
do	case "$o" in
		i) FILE_ERE="${-not -regex $OPTARG}";;
		n) N=1;;
		*) HELP=1;;
	esac
done


# --- Processing target directory ---
ARGC=$#
if [ "$OPTIND" -eq "$ARGC" ]; then
	shift $(($OPTIND - 1))	
	DIR="$*"
else
	((OPTIND--))
	if [ $(($OPTIND - 1)) -eq "$ARGC" ]; then
		DIR=$(pwd)
	else
		HELP=1
	fi
fi


# --- Returning help ---
if [ "$HELP" -eq 1 ]; then
	echo "This script creates report of directory" >&2
	echo "Syntax: dirgraph [-i FILE_ERE] [-n] [DIR]" >&2
	exit 1 # jedna nebo nula?
fi


# --- Check for errors ---
if [ ! -d "$DIR" ]; then
	echo "Error: Directory doesn't exist" >&2
	exit 1
fi


# --- Normalization (-n FLAG) ---
if [ "$N" -eq 1 ]; then
	if [ -t 1 ]; then
		N=$(tput cols) # Proc se to musi takhle?
	else
		N=80
	fi
fi


# --- Ignoring regex (-i FLAG) ---



# --- Printing head of result ---
echo "Root directory: $DIR"
printf "Directories: %d\n" $(find $DIR -type d | wc -l)


# --- File size histogram --- -iname "$FILE_ERE", mozna jestli du nepotrebuje -b na merlinovi
find "$DIR" -type f $FILE_ERE -exec wc -c {} + | awk -v gmax="$N" '
{
	if($2 != "total")
		if($1 < 100)
			size[0]++;
		else if($1 < 1024)
			size[1]++;
		else if($1 < 10240)
			size[2]++;
		else if($1 < 102400)
			size[3]++;
		else if($1 < 1048576)
			size[4]++;
		else if($1 < 10485760)
			size[5]++;
		else if($1 < 104857600)
			size[6]++;
		else if($1 < 1073741824)
			size[7]++;
		else
			size[8]++;
}
END{
	print "All files: "NR-1;

	prefix[0] = "<100 B";
	prefix[1] = "<1 KiB";
	prefix[2] = "<10 KiB";
	prefix[3] = "<100 KiB";
	prefix[4] = "<1 MiB";
	prefix[5] = "<10 MiB";
	prefix[6] = "<100 MiB";
	prefix[7] = "<1 GiB";
	prefix[8] = ">=1 GiB";

	if(gmax != 0)
		gmax -= 13; # Asi osetrit

	print "File size histogram:"
	for(i = 0; i < 9; i++)
	{
		if(gmax == 0 || size[i] < gmax)
			max = size[i];
		else
			max = gmax;

		printf "  %-8s: ",prefix[i];

		for (j = 0; j < max; j++)
		{
			printf "#";
		}
		printf "\n";
	}
}'

# --- File type histogram ---
find "$DIR" -type f $FILE_ERE -exec file -b {} \; | cut -c -40 | sort | uniq -c | sort -n -r | awk -v gmax="$N" '
BEGIN{
	if(gmax != 0)
		gmax -= 48;
	
	print "File type histogram:"	
}
{
	count = $1;
	$1 = ""; 

	if(gmax == 0 || count < gmax)
		max = count;
	else
		max = gmax;
	if(length($0) < 41)
		printf " %-44s: ",$0;
	else
		printf " %s...: ",$0;

	for(j = 0; j < max; j++)
	{
		printf "#";
	}
	printf "\n";
}'

exit 0
